extends base

block content
  link(rel='stylesheet' href='/css/product.css')
  .card
    .left
      img(src=`/images/${product.coverImage}` alt=`${product.name}`)
      i.fa.fa-long-arrow-left
      i.fa.fa-long-arrow-right
    .right
      .product-info
        .product-name
          h1 #{product.name}
          i.fa.fa-search
          i.fa.fa-user
          i.fa.fa-shopping-cart
        .details
          h2 #{product.ProductGender.name}
          h2 #{product.Brand.name}
          h3 #{product.ShortDescription}
          h4
            span.fa.fa-dollar= `$ ${uniqueSizes[0].price}`
        ul.ul
          li.li COLOR
          each color, index in uniqueColors
            li(class=`li color ${color}` data-color=color)
        ul.ul
          li.li SIZE:
          each size, index in uniqueSizes
            li(class=`li size ${size.Attributes.value}` data-size=size.Attributes.value)= size.Attributes.value
        span.foot
          i.fa.fa-shopping-bag
          | Buy Now
        span.foot
          i.fa.fa-shopping-cart
          | Add TO Cart

  //- script.
  //-   document.addEventListener('DOMContentLoaded', () => {
  //-   const colorOptions = document.querySelectorAll('.color');
  //-   const sizeOptions = document.querySelectorAll('.size');
  //-   const priceDisplay = document.querySelector('.details h4 span');
  //-   let selectedColor = "#{defaultVariant.Attributes.find(attr => attr.type === 'color').value}";
  //-   let selectedSize = "#{defaultVariant.Attributes.find(attr => attr.type === 'size').value}";

  //-   const updatePrice = async () => {
  //-   try {
  //-   const response = await fetch(`/products/1/price?color=${selectedColor}&size=${selectedSize}`);
  //-   if (!response.ok) {
  //-   throw new Error('Network response was not ok');
  //-   }
  //-   const data = await response.json();
  //-   priceDisplay.textContent = `$${data.price}`;
  //-   } catch (error) {
  //-   console.error('Error fetching price:', error);
  //-   }
  //-   };

  //-   colorOptions.forEach(option => {
  //-   option.addEventListener('click', (event) => {
  //-   selectedColor = event.target.getAttribute('data-color');
  //-   updatePrice();
  //-   });
  //-   });

  //-   sizeOptions.forEach(option => {
  //-   option.addEventListener('click', (event) => {
  //-   selectedSize = event.target.getAttribute('data-size');
  //-   updatePrice();
  //-   });
  //-   });
  //-   });
